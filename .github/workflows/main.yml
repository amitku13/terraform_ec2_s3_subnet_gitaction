name: Deploy EC2 Instance

on:
  workflow_dispatch:
    inputs:
      aws_region:
        description: "AWS Region to deploy resources"
        required: true
        default: "us-east-1"
      ami_id:
        description: "AMI ID for the EC2 instance"
        required: true
      instance_type:
        description: "Instance type (e.g., t2.micro)"
        required: true
        default: "t2.micro"
      key_pair:
        description: "Key pair name for SSH access"
        required: true

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Configure AWS Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          echo "AWS credentials configured."

      - name: Debug Inputs
        run: |
          echo "AWS Region: '${{ github.event.inputs.aws_region }}'"
          echo "AMI ID: '${{ github.event.inputs.ami_id }}'"
          echo "Instance Type: '${{ github.event.inputs.instance_type }}'"
          echo "Key Pair: '${{ github.event.inputs.key_pair }}'"

      - name: Validate Inputs
        run: |
          if [ -z "${{ github.event.inputs.aws_region }}" ]; then
            echo "Error: aws_region is required but not provided."
            exit 1
          fi
          if [ -z "${{ github.event.inputs.ami_id }}" ]; then
            echo "Error: ami_id is required but not provided."
            exit 1
          fi
          if [ -z "${{ github.event.inputs.instance_type }}" ]; then
            echo "Error: instance_type is required but not provided."
            exit 1
          fi
          if [ -z "${{ github.event.inputs.key_pair }}" ]; then
            echo "Error: key_pair is required but not provided."
            exit 1
          fi

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: |
          terraform plan \
            -var="aws_region=${{ github.event.inputs.aws_region }}" \
            -var="ami_id=${{ github.event.inputs.ami_id }}" \
            -var="instance_type=${{ github.event.inputs.instance_type }}" \
            -var="key_pair=${{ github.event.inputs.key_pair }}"

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="aws_region=${{ github.event.inputs.aws_region }}" \
            -var="ami_id=${{ github.event.inputs.ami_id }}" \
            -var="instance_type=${{ github.event.inputs.instance_type }}" \
            -var="key_pair=${{ github.event.inputs.key_pair }}"
